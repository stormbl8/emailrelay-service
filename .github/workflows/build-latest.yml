name: build-latest

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'               # Trigger on version tags like v1.2.3
    branches:
      - '*'                # Trigger on all branches
    paths-ignore:
      - LICENSE
      - docker-compose.yml

jobs:
  build-push-latest:
    runs-on: ubuntu-latest
    environment: docker-publish

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set version tag
        id: meta
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          if [[ "$VERSION" == "$GITHUB_REF" ]]; then
            echo "Not a tag, defaulting to 'latest'"
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Install git-cliff
        run: |
          curl -sSL https://github.com/orhun/git-cliff/releases/latest/download/git-cliff-linux-x86_64.tar.gz -o git-cliff.tar.gz
          tar -xf git-cliff.tar.gz
          sudo mv git-cliff /usr/local/bin/
          

      - name: Generate release notes with git-cliff
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Generating release notes for version $VERSION"

          RELEASE_NOTES=$(git-cliff --tag "$VERSION" --strip all)
          echo "Release notes for $VERSION:"
          echo "$RELEASE_NOTES"

          echo "release_notes<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./image
          file: ./image/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha,ref=stormbl8/emailrelay
          cache-to: type=gha,ref=stormbl8/emailrelay,mode=max
          tags: |
            stormbl8/emailrelay:latest
            ${{ steps.meta.outputs.tag != 'latest' && format('stormbl8/emailrelay:{0}', steps.meta.outputs.tag) || '' }}

      - name: Update DockerHub repo description
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: stormbl8/emailrelay

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ env.release_notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

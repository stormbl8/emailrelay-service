name: build-latest

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
    branches:
      - '*'
    paths-ignore:
      - LICENSE
      - docker-compose.yml

jobs:
  build-push-latest:
    runs-on: ubuntu-latest
    environment: docker-publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set version tag
        id: meta
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./image
          file: ./image/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha,ref=stormbl8/emailrelay
          cache-to: type=gha,ref=stormbl8/emailrelay,mode=max
          tags: |
            stormbl8/emailrelay:latest
            ${{ startsWith(github.ref, 'refs/tags/v') && format('stormbl8/emailrelay:{0}', steps.meta.outputs.tag) || '' }}

      - name: Update DockerHub repo description
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: stormbl8/emailrelay

      - name: Extract release notes from CHANGELOG.md
        if: startsWith(github.ref, 'refs/tags/v')
        id: changelog
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Looking for changelog entry for version $VERSION"
          NOTES=$(awk -v version="$VERSION" '
            $0 ~ "## \\[" version "\\]" {found=1; next}
            found && /^## / {exit}
            found {print}
          ' CHANGELOG.md)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
